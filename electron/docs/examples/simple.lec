import $R, $and from "./cells"

declare module $fpga {}

@bom("Yago", "XYZ")
export module R10K {
    analog a, b
    @rotate(90)
    cell r = $R(10k) {A=a, B=b}
}

export module AND {
    input a, b
    output c
    cell and1 = $and(A_WIDTH=1, B_WIDTH=1) {A=a, B=b, Y=c}
}

@model(BlackBoxModel)
declare module BlackBox {
    @set_pad(1, 2)
    analog vcc, gnd
}

module SubModule {
    analog a, b
    cell r1 = R10K() {a, b}
    output c = 1'1
    net[2] d
    analog co = 1'1
    net[5] x
    net x0 = x[0]
    net x1 = x[1]
    net x2 = x[2]
    net x3 = x[3]
    net x4 = x[4]
    x = (x0, x1, x2, x3, x4)
}

module Pcb {
    net '+12V, gnd
    cell bb = BlackBox() { vcc='+12V, gnd }
    cell sm = SubModule() {}

    @bitstream(AND)
    @set_io(a="A1", b="F2", c="D3")
    cell fpga = $fpga() {}
}
