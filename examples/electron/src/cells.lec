/// Built-in resistor
@skin(
    <g>
        <rect width="40" height="10"></rect>
    </g>
)
export declare module $R(RESISTANCE: Ohm) {
    @set_pad(1)
    @left @fixed(0, 5)
    analog A
    @set_pad(2)
    @right @fixed(40, 5)
    analog B
}

/// Built-in capacitor
@skin(
    <g>
        <line x1="0" x2="0" y1="0" y2="30" />
        <line x1="10" x2="10" y1="0" y2="30" />
    </g>
)
export declare module $C(CAPACITANCE: Farad) {
    @left @fixed(0, 15)
    @set_pad(1)
    analog A
    @right @fixed(10, 15)
    @set_pad(2)
    analog B
}

module Test {
    @left analog left
    @top analog top
    @right analog right
    @bottom analog bottom
    @rotate(0)
    cell r1 = $R(10k) {}
    @rotate(90)
    cell r2 = $R(10k) {}
    @rotate(180)
    cell c1 = $C(10nF) {}
    @rotate(270)
    cell c2 = $C(10nF) {}
}

export declare module $L(INDUCTANCE: Henry) {
  @set_pad(1)
  analog A
  @set_pad(2)
  analog B
}

export declare module $D {
  @set_pad(1)
  analog A
  @set_pad(2)
  analog K
}

export declare module $M { analog G, D, S }
export declare module $V(VOLTAGE: Volt) { analog vcc, gnd }

export declare module $dac(WIDTH: Integer) {
    analog VCC, GND
    input[WIDTH] A
    analog[WIDTH] Y
}

export declare module $adc(WIDTH: Integer) {
    analog VCC, GND
    analog[WIDTH] A
    output[WIDTH] Y
}

export declare module Clock(FREQ: Herz) { output clk }

export declare module $dff(WIDTH: Integer, CLK_POLARITY: Integer) {
    @clock
    input CLK
    input[WIDTH] D
    output[WIDTH] Q
}

export declare module $not(A_SIGNED: Boolean, A_WIDTH: Integer) {
    input[A_WIDTH] A
    output Y
}

export declare module $add(
    A_SIGNED: Boolean,
    A_WIDTH: Integer,
    B_SIGNED: Boolean,
    B_WIDTH: Integer,
) {
    input[A_WIDTH] A
    input[B_WIDTH] B
    output Y
}

export declare module $mux(WIDTH: Integer) {
    input S
    input[WIDTH] A, B
    output[WIDTH] Y
}

export declare module $and(A_WIDTH: Integer, B_WIDTH: Integer) {
    input[A_WIDTH] A
    input[B_WIDTH] B
    output Y
}
